How to create a branch from GIThub

CLONE A REPOSITORY
1. Create a folder and name it anything 
2. Right click then select Git Bash here
3. On Bash, type git clone <name of the remote> (e.g https://github.com/monmonplaza/myrepository.git)
4. type cd myrepository (it will go inside the clone repository);
5. type git branch <branchName> (make sure the branch name is descriptive)
6. type git checkout mybranch (this will switch you from master to the branch directory)
7. type code . (this will open VSCode)


COMMIT CHANGES 
1. type git add . (add your update to the local repo)
2. type git status (use to check the status of add)
3. type git commit -m "your comment"


PUSH TO GIT REPO
1. type git push origin <branchName>
2. type git checkout master (switch directory from branch to master)
3. type git merge (merge branch update to the master repository )


FETCH A BRANCH (RECREATING THE REMOTE BRANCH IN YOUR LOCAL STORAGE)
1. git fetch origin
2. git checkout -b <branch name> origin/<branch name>


PULL BRANCH FROM GIT (PERFORM JUST TO UPDATE THE ALREADY FETCHED BRANCH)
1. git pull origin <branch name>


MERGE BRANCH TO MAIN
1. git checkout main 
2. git merge <branch name>


USEFUL GIT COMMAND 
1. git ls-files (view all files of the repository)
2. git rm --cache <FileName> (remove a file from the repository)
3. git branch (check the currently open branch)
4. git branch -r (show available branches)
5. git checkout <name of branch> (open specific branch)


HOST YOUR WEBSITE USING GITHUB
1. open the project directory
2. right click then select Git Bash here
3. type npm init  (install node_modules - edit the package info to your preference)
4. type npm install gh-pages --save-dev (install github pages)
6. type touch .gitignore (this will create a .gitignore file)
7. type code . (open VScode)
8. open the .gitignore file then type node_modules then save
9. open the package.json file  then add this command under the "script" item <"deploy": "gh-pages -d dist"> ("dist" is the folder that contains the index.html)
10. type git init
11. type git add .
12. type git commit -m "ready to push to remote repo"
13. go to github then create a new repository
14. git remote add origin https://github.com/monmonplaza/<repositoryName>.git
15. git push -u origin master
16. type npm run deploy

ADDING AN EXISTING PROJECT TO GITHUB USING THE COMMAND LINE
1. Create a new repository on GitHub. To avoid errors, do not initilize the new repository with README, or gitignore files. You can add these files after your project has beed pushed to Github. 
2. Open Git Bash (Or right click on the folder then choose Git Bash Here)
3. Initialize the local directory as a Git repository. 
   Type $ git init -b main
4. Add the files in your new local repository. This stages them for the first commit. This command commits the tracked changes and prepares them to be pushed to a remote repository. To remove this commit and modify the file, use 'git reset --soft HEAD~1' and commit and add the file again. 
   Type $ git add . 
5. At the top of your GitHub repository's Quick Setup page, copy the remote repository URL. (ex. https://github.com/jhonny-dichoso/fbshris.git)
6. In the command prompt, add the url for the remote repository where your local repository will be pushed. 
   Type $ git remote add origin <REMOTE_URL> (Set the new remote)
   Type $ git remote -v (Verifies the new remote URL)
7. Push the changes in your local repository to GitHub. 
   Type $ git push origin main (Pushes the changes in your local repository up to the remote repository you specified as the origin)
   




 
 
